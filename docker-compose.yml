version: '3.8'

services:
  # Servidor Eureka - Service Discovery
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - microservices-network

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

  # Base de datos MongoDB para Order Service
  mongo:
    image: mongo:7.0
    container_name: mongo-db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: orderdb
    volumes:
      - ./orderMgmtMicroservice/docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongo-data:/data/db
    networks:
      - microservices-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://admin:admin123@localhost:27017/admin --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Base de datos MySQL para User Service
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    ports:
      - "3307:3306"    # Puerto 3307 para evitar conflicto con MySQL local
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: usermgmt_db
      MYSQL_USER: fastapi
      MYSQL_PASSWORD: fastapipass
    volumes:
      - ./UserMgmtMicroservice/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql-data:/var/lib/mysql
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpass"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Order Management Microservice (Node.js)
  order-service:
    build:
      context: ./orderMgmtMicroservice
      dockerfile: Dockerfile
    container_name: order-management-service
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - MONGODB_URI=mongodb://admin:admin123@mongo:27017/orderdb?authSource=admin
      - EUREKA_HOST=eureka-server
      - EUREKA_PORT=8761
      - HOSTNAME=order-service
      - HOST_IP=order-service
    depends_on:
      - eureka-server
      - mongo
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

  # User Management Microservice (Python FastAPI)
  user-service:
    build:
      context: ./UserMgmtMicroservice
      dockerfile: Dockerfile
    container_name: user-management-service
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - HOST=0.0.0.0
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=usermgmt_db
      - DB_USER=fastapi
      - DB_PASSWORD=fastapipass
      - EUREKA_SERVER=http://eureka-server:8761/eureka
      - HOSTNAME=user-service
      - HOST_IP=user-service
    depends_on:
      - mysql
      - eureka-server
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

  login-service:
    build:
      context: ./LoginMicroservice   # carpeta donde est치 el c칩digo y el Dockerfile
      dockerfile: Dockerfile
    container_name: login-service
    ports:
      - "8088:8088"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8088
      # Configuraci칩n DB
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=usermgmt_db
      - DB_USER=root
      - DB_PASSWORD=rootpass
      # Configuraci칩n Eureka
      - EUREKA_HOST=eureka-server
    depends_on:
      - mysql
      - eureka-server
    networks:
      - microservices-network


networks:
  microservices-network:
    driver: bridge
    name: microservices-network

volumes:
  mongo-data:
    driver: local
  mysql-data:
    driver: local